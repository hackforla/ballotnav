CREATE OR REPLACE FUNCTION pg_temp.err(msg varchar) RETURNS boolean     
AS $$ BEGIN RAISE '%',msg; END; $$ LANGUAGE plpgsql;
SELECT CASE WHEN NOT EXISTS (
  SELECT 1 FROM pg_extension WHERE extname = 'postgis'
) THEN pg_temp.err('Migration aborted. Are PostGIS extensions installed in this database?') END;
CREATE TYPE public.enum_importantdatetype_date_type AS ENUM ('deadline','range');
CREATE TYPE public.enum_jurisdiction_infotab_type AS ENUM ('document','infotab','contactinfo','news');
CREATE TYPE public.enum_jurisdiction_notice_severity AS ENUM ('critical','info');
CREATE TYPE public.enum_location_is_drop_box AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_early_dropoff_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_early_voting_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_elections_office AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_handicap_accessible AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_polling_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_is_staffed_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_location_schedule_type AS ENUM ('description','hours','continuous');
CREATE TYPE public.enum_state_infotab_type AS ENUM ('document','infotab','contactinfo','news');
CREATE TYPE public.enum_state_is_late_registration_possible AS ENUM ('Y','N','U');
CREATE TYPE public.enum_state_jurisdiction_type AS ENUM ('County','Parish','County or City','City or Township','Municipality','Town or City');
CREATE TYPE public.enum_state_notice_severity AS ENUM ('critical','info');
CREATE TYPE public.enum_state_state_type AS ENUM ('State','Commonwealth','Federal District');
CREATE TYPE public.enum_state_voter_registration_authority AS ENUM ('state','jurisdiction');
CREATE TYPE public.enum_user_jurisdiction_status AS ENUM ('requested','editor','none');
CREATE TYPE public.enum_user_role AS ENUM ('volunteer','admin');
CREATE TYPE public.enum_user_state_status AS ENUM ('requested','editor','none');
CREATE TYPE public.enum_wip_jurisdiction_infotab_type AS ENUM ('document','infotab','contactinfo','news');
CREATE TYPE public.enum_wip_jurisdiction_notice_severity AS ENUM ('critical','info');
CREATE TYPE public.enum_wip_location_is_drop_box AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_early_dropoff_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_early_voting_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_elections_office AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_handicap_accessible AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_polling_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_is_staffed_location AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_location_schedule_type AS ENUM ('description','hours','continuous');
CREATE TYPE public.enum_wip_state_infotab_type AS ENUM ('document','infotab','contactinfo','news');
CREATE TYPE public.enum_wip_state_is_late_registration_possible AS ENUM ('Y','N','U');
CREATE TYPE public.enum_wip_state_jurisdiction_type AS ENUM ('County','Parish','County or City','City or Township','Municipality','Town or City');
CREATE TYPE public.enum_wip_state_notice_severity AS ENUM ('critical','info');
CREATE TYPE public.enum_wip_state_state_type AS ENUM ('State','Commonwealth','Federal District');
CREATE TYPE public.enum_wip_state_voter_registration_authority AS ENUM ('state','jurisdiction');
SET default_tablespace = '';
CREATE TABLE public.calendar (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    date_actual date NOT NULL,
    day_suffix text NOT NULL,
    day_name text NOT NULL,
    day_of_week integer NOT NULL,
    day_of_month integer NOT NULL,
    day_of_quarter integer NOT NULL,
    day_of_year integer NOT NULL,
    week_of_month integer NOT NULL,
    week_of_year integer NOT NULL,
    week_of_year_iso text NOT NULL,
    month_actual integer NOT NULL,
    month_name text NOT NULL,
    month_abbreviation text NOT NULL,
    quarter_actual integer NOT NULL,
    quarter_name text NOT NULL,
    year_actual integer NOT NULL,
    first_day_of_week date NOT NULL,
    last_day_of_week date NOT NULL,
    first_day_of_month date NOT NULL,
    last_day_of_month date NOT NULL,
    first_day_of_quarter date NOT NULL,
    last_day_of_quarter date NOT NULL,
    first_day_of_year date NOT NULL,
    last_day_of_year date NOT NULL,
    mmyyyy text NOT NULL,
    mmddyyyy text NOT NULL,
    is_weekend boolean NOT NULL
);
COMMENT ON COLUMN public.calendar.id IS 'not autonum. date coerced into yyyymmdd format.';
CREATE TABLE public.facilitytype (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.importantdatetype (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    date_type public.enum_importantdatetype_date_type NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    name text NOT NULL,
    authority_name text,
    mail_address1 text,
    mail_address2 text,
    mail_address3 text,
    is_not_valid boolean DEFAULT false NOT NULL,
    internal_notes text,
    geojson text,
    fips_category text,
    fips_county_code text,
    fips_county_number integer,
    fips_complete_county_code text,
    fips_complete_county_number integer,
    fips_county_sub_code text,
    fips_place_code text,
    fips_cons_city_code text,
    wip_jurisdiction_id integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.jurisdiction.wip_jurisdiction_id IS 'Set to the WIP ID most recently published. This should be constrained to wip_jurisdiction.id, but sequelize does not understand cyclic dependencies.';
CREATE TABLE public.jurisdiction_importantdate (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    importantdatetype_id integer,
    begin_time timestamp with time zone,
    end_time timestamp with time zone,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_infotab (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    sort_order integer DEFAULT 1 NOT NULL,
    caption text NOT NULL,
    markdown text,
    html text,
    type public.enum_jurisdiction_infotab_type NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_news (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    date_posted timestamp with time zone NOT NULL,
    caption text NOT NULL,
    url text NOT NULL,
    summary text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_notice (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    date_posted timestamp with time zone NOT NULL,
    severity public.enum_jurisdiction_notice_severity NOT NULL,
    message text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_phone (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    phonenumbertype_id integer,
    phone_number text,
    description text,
    sort_order integer DEFAULT 1 NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_publish_log (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    publisher_user_id integer,
    wip_jurisdiction_id integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.jurisdiction_url (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    urltype_id integer,
    url text NOT NULL,
    name text NOT NULL,
    description text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.location (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    facilitytype_id integer,
    name text,
    info_public text,
    timezone text,
    address1 text,
    address2 text,
    address3 text,
    city text,
    state text,
    zip text,
    contact_name text,
    contact_email text,
    contact_fax text,
    contact_phone text,
    internal_note text,
    geom_latitude text,
    geom_longitude text,
    geom_data_source text,
    geom_point public.geometry(Point,4326),
    is_early_dropoff_location public.enum_location_is_early_dropoff_location DEFAULT 'U'::public.enum_location_is_early_dropoff_location NOT NULL,
    is_early_voting_location public.enum_location_is_early_voting_location DEFAULT 'U'::public.enum_location_is_early_voting_location NOT NULL,
    is_elections_office public.enum_location_is_elections_office DEFAULT 'U'::public.enum_location_is_elections_office NOT NULL,
    is_polling_location public.enum_location_is_polling_location DEFAULT 'U'::public.enum_location_is_polling_location NOT NULL,
    is_drop_box public.enum_location_is_drop_box DEFAULT 'U'::public.enum_location_is_drop_box NOT NULL,
    is_handicap_accessible public.enum_location_is_handicap_accessible DEFAULT 'U'::public.enum_location_is_handicap_accessible NOT NULL,
    is_staffed_location public.enum_location_is_staffed_location DEFAULT 'U'::public.enum_location_is_staffed_location NOT NULL,
    schedule_type public.enum_location_schedule_type NOT NULL,
    schedule_description text,
    continuous_open text,
    continuous_close text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.location_hours (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    location_id integer,
    begin_date date NOT NULL,
    end_date date NOT NULL,
    open_time text NOT NULL,
    close_time text NOT NULL,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.location_hours.open_time IS 'must be validated HH:MM';
COMMENT ON COLUMN public.location_hours.close_time IS 'must be validated HH:MM';
CREATE TABLE public.phonenumbertype (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    sort_order integer DEFAULT 1 NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    abbreviation text NOT NULL,
    authority_name text,
    jurisdiction_type public.enum_state_jurisdiction_type DEFAULT 'County'::public.enum_state_jurisdiction_type NOT NULL,
    internal_notes text,
    is_late_registration_possible public.enum_state_is_late_registration_possible DEFAULT 'U'::public.enum_state_is_late_registration_possible NOT NULL,
    voter_registration_authority public.enum_state_voter_registration_authority DEFAULT 'jurisdiction'::public.enum_state_voter_registration_authority NOT NULL,
    fips_code text,
    fips_number integer,
    state_type public.enum_state_state_type DEFAULT 'State'::public.enum_state_state_type NOT NULL,
    timezone_default text,
    geojson text,
    wip_state_id integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.state.wip_state_id IS 'Set to the WIP ID most recently published. This should be constrained to wip_state.id, but sequelize does not understand cyclic dependencies.';
CREATE TABLE public.state_importantdate (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    importantdatetype_id integer,
    begin_time timestamp with time zone,
    end_time timestamp with time zone,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_infotab (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    sort_order integer DEFAULT 1 NOT NULL,
    caption text NOT NULL,
    markdown text,
    html text,
    type public.enum_state_infotab_type NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_news (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    date_posted timestamp with time zone NOT NULL,
    caption text NOT NULL,
    url text NOT NULL,
    summary text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_notice (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    date_posted timestamp with time zone NOT NULL,
    severity public.enum_state_notice_severity NOT NULL,
    message text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_phone (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    phonenumbertype_id integer,
    phone_number text,
    description text,
    sort_order integer DEFAULT 1 NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_publish_log (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    publisher_user_id integer,
    wip_state_id integer,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.state_url (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    urltype_id integer,
    url text NOT NULL,
    name text NOT NULL,
    description text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.urltype (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    do_not_publish boolean DEFAULT false NOT NULL,
    is_email boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public."user" (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    first_name text NOT NULL,
    last_name text NOT NULL,
    email text NOT NULL,
    role public.enum_user_role NOT NULL,
    password_hash text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.user_jurisdiction (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id integer,
    jurisdiction_id integer,
    status public.enum_user_jurisdiction_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.user_state (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    user_id integer,
    state_id integer,
    status public.enum_user_state_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    jurisdiction_id integer,
    edit_basis_wip_jurisdiction_id integer,
    name text NOT NULL,
    authority_name text,
    mail_address1 text,
    mail_address2 text,
    mail_address3 text,
    is_not_valid boolean DEFAULT false NOT NULL,
    internal_notes text,
    fips_category text,
    fips_county_code text,
    fips_county_number integer,
    fips_complete_county_code text,
    fips_complete_county_number integer,
    fips_county_sub_code text,
    fips_place_code text,
    fips_cons_city_code text,
    editor_user_id integer,
    editor_comments text,
    is_released boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.wip_jurisdiction.edit_basis_wip_jurisdiction_id IS 'This should be constrained to wip_jurisdiction.id (to identify the origin of this data) but sequelize does not understand cyclic dependencies';
CREATE TABLE public.wip_jurisdiction_importantdate (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    importantdatetype_id integer,
    begin_time timestamp with time zone,
    end_time timestamp with time zone,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction_infotab (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    sort_order integer DEFAULT 1 NOT NULL,
    caption text NOT NULL,
    markdown text,
    html text,
    type public.enum_wip_jurisdiction_infotab_type NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction_news (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    date_posted timestamp with time zone NOT NULL,
    caption text NOT NULL,
    url text NOT NULL,
    summary text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction_notice (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    date_posted timestamp with time zone NOT NULL,
    severity public.enum_wip_jurisdiction_notice_severity NOT NULL,
    message text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction_phone (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    phonenumbertype_id integer,
    phone_number text,
    description text,
    sort_order integer DEFAULT 1 NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_jurisdiction_url (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    urltype_id integer,
    url text NOT NULL,
    name text NOT NULL,
    description text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_location (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_jurisdiction_id integer,
    facilitytype_id integer,
    name text,
    info_public text,
    timezone text,
    address1 text,
    address2 text,
    address3 text,
    city text,
    state text,
    zip text,
    contact_name text,
    contact_email text,
    contact_fax text,
    contact_phone text,
    internal_note text,
    latitude text,
    longitude text,
    geom_point public.geometry(Point,4326),
    is_early_dropoff_location public.enum_wip_location_is_early_dropoff_location DEFAULT 'U'::public.enum_wip_location_is_early_dropoff_location NOT NULL,
    is_early_voting_location public.enum_wip_location_is_early_voting_location DEFAULT 'U'::public.enum_wip_location_is_early_voting_location NOT NULL,
    is_elections_office public.enum_wip_location_is_elections_office DEFAULT 'U'::public.enum_wip_location_is_elections_office NOT NULL,
    is_polling_location public.enum_wip_location_is_polling_location DEFAULT 'U'::public.enum_wip_location_is_polling_location NOT NULL,
    is_drop_box public.enum_wip_location_is_drop_box DEFAULT 'U'::public.enum_wip_location_is_drop_box NOT NULL,
    is_handicap_accessible public.enum_wip_location_is_handicap_accessible DEFAULT 'U'::public.enum_wip_location_is_handicap_accessible NOT NULL,
    is_staffed_location public.enum_wip_location_is_staffed_location DEFAULT 'U'::public.enum_wip_location_is_staffed_location NOT NULL,
    schedule_type public.enum_wip_location_schedule_type NOT NULL,
    schedule_description text,
    continuous_open text,
    continuous_close text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_location_hours (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_location_id integer,
    begin_date date NOT NULL,
    end_date date NOT NULL,
    open_time text NOT NULL,
    close_time text NOT NULL,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.wip_location_hours.open_time IS 'must be validated HH:MM';
COMMENT ON COLUMN public.wip_location_hours.close_time IS 'must be validated HH:MM';
CREATE TABLE public.wip_state (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    state_id integer,
    name text NOT NULL,
    abbreviation text NOT NULL,
    authority_name text,
    jurisdiction_type public.enum_wip_state_jurisdiction_type DEFAULT 'County'::public.enum_wip_state_jurisdiction_type NOT NULL,
    internal_notes text,
    is_late_registration_possible public.enum_wip_state_is_late_registration_possible DEFAULT 'U'::public.enum_wip_state_is_late_registration_possible NOT NULL,
    voter_registration_authority public.enum_wip_state_voter_registration_authority DEFAULT 'jurisdiction'::public.enum_wip_state_voter_registration_authority NOT NULL,
    fips_code text,
    fips_number integer,
    state_type public.enum_wip_state_state_type DEFAULT 'State'::public.enum_wip_state_state_type NOT NULL,
    timezone_default text,
    geojson text,
    edit_basis_wip_state_id integer,
    editor_user_id integer,
    editor_comments text,
    is_released boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
COMMENT ON COLUMN public.wip_state.edit_basis_wip_state_id IS 'This should be constrained to wip_state.id (to identify the origin of this data) but sequelize does not understand cyclic dependencies';
CREATE TABLE public.wip_state_importantdate (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    importantdatetype_id integer,
    begin_time timestamp with time zone,
    end_time timestamp with time zone,
    note text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_state_infotab (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    sort_order integer DEFAULT 1 NOT NULL,
    caption text NOT NULL,
    markdown text,
    html text,
    type public.enum_wip_state_infotab_type NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_state_news (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    date_posted timestamp with time zone NOT NULL,
    caption text NOT NULL,
    url text NOT NULL,
    summary text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_state_notice (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    date_posted timestamp with time zone NOT NULL,
    severity public.enum_wip_state_notice_severity NOT NULL,
    message text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_state_phone (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    phonenumbertype_id integer,
    phone_number text,
    description text,
    sort_order integer DEFAULT 1 NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
CREATE TABLE public.wip_state_url (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    wip_state_id integer,
    urltype_id integer,
    url text NOT NULL,
    name text NOT NULL,
    description text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    deleted_at timestamp with time zone
);
ALTER TABLE ONLY public.calendar
    ADD CONSTRAINT calendar_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.facilitytype
    ADD CONSTRAINT facilitytype_name_key UNIQUE (name);
ALTER TABLE ONLY public.facilitytype
    ADD CONSTRAINT facilitytype_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.importantdatetype
    ADD CONSTRAINT importantdatetype_name_key UNIQUE (name);
ALTER TABLE ONLY public.importantdatetype
    ADD CONSTRAINT importantdatetype_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_importantdate
    ADD CONSTRAINT jurisdiction_importantdate_jurisdiction_id_importantdatetyp_key UNIQUE (jurisdiction_id, importantdatetype_id);
ALTER TABLE ONLY public.jurisdiction_importantdate
    ADD CONSTRAINT jurisdiction_importantdate_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_infotab
    ADD CONSTRAINT jurisdiction_infotab_jurisdiction_id_caption_key UNIQUE (jurisdiction_id, caption);
ALTER TABLE ONLY public.jurisdiction_infotab
    ADD CONSTRAINT jurisdiction_infotab_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_news
    ADD CONSTRAINT jurisdiction_news_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_notice
    ADD CONSTRAINT jurisdiction_notice_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_phone
    ADD CONSTRAINT jurisdiction_phone_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction
    ADD CONSTRAINT jurisdiction_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_publish_log
    ADD CONSTRAINT jurisdiction_publish_log_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_url
    ADD CONSTRAINT jurisdiction_url_jurisdiction_id_urltype_id_key UNIQUE (jurisdiction_id, urltype_id);
ALTER TABLE ONLY public.jurisdiction_url
    ADD CONSTRAINT jurisdiction_url_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.location_hours
    ADD CONSTRAINT location_hours_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.phonenumbertype
    ADD CONSTRAINT phonenumbertype_name_key UNIQUE (name);
ALTER TABLE ONLY public.phonenumbertype
    ADD CONSTRAINT phonenumbertype_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_importantdate
    ADD CONSTRAINT state_importantdate_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_importantdate
    ADD CONSTRAINT state_importantdate_state_id_importantdatetype_id_key UNIQUE (state_id, importantdatetype_id);
ALTER TABLE ONLY public.state_infotab
    ADD CONSTRAINT state_infotab_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_infotab
    ADD CONSTRAINT state_infotab_state_id_caption_key UNIQUE (state_id, caption);
ALTER TABLE ONLY public.state_news
    ADD CONSTRAINT state_news_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_notice
    ADD CONSTRAINT state_notice_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_phone
    ADD CONSTRAINT state_phone_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state
    ADD CONSTRAINT state_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_publish_log
    ADD CONSTRAINT state_publish_log_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_url
    ADD CONSTRAINT state_url_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.state_url
    ADD CONSTRAINT state_url_state_id_urltype_id_key UNIQUE (state_id, urltype_id);
ALTER TABLE ONLY public.urltype
    ADD CONSTRAINT urltype_name_key UNIQUE (name);
ALTER TABLE ONLY public.urltype
    ADD CONSTRAINT urltype_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_email_key UNIQUE (email);
ALTER TABLE ONLY public.user_jurisdiction
    ADD CONSTRAINT user_jurisdiction_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.user_state
    ADD CONSTRAINT user_state_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_importantdate
    ADD CONSTRAINT wip_jurisdiction_importantdate_importantdatetype_id_key UNIQUE (importantdatetype_id);
ALTER TABLE ONLY public.wip_jurisdiction_importantdate
    ADD CONSTRAINT wip_jurisdiction_importantdate_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_importantdate
    ADD CONSTRAINT wip_jurisdiction_importantdate_wip_jurisdiction_id_key UNIQUE (wip_jurisdiction_id);
ALTER TABLE ONLY public.wip_jurisdiction_infotab
    ADD CONSTRAINT wip_jurisdiction_infotab_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_infotab
    ADD CONSTRAINT wip_jurisdiction_infotab_wip_jurisdiction_id_caption_key UNIQUE (wip_jurisdiction_id, caption);
ALTER TABLE ONLY public.wip_jurisdiction_news
    ADD CONSTRAINT wip_jurisdiction_news_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_notice
    ADD CONSTRAINT wip_jurisdiction_notice_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_phone
    ADD CONSTRAINT wip_jurisdiction_phone_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction
    ADD CONSTRAINT wip_jurisdiction_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_url
    ADD CONSTRAINT wip_jurisdiction_url_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_jurisdiction_url
    ADD CONSTRAINT wip_jurisdiction_url_wip_jurisdiction_id_urltype_id_key UNIQUE (wip_jurisdiction_id, urltype_id);
ALTER TABLE ONLY public.wip_location_hours
    ADD CONSTRAINT wip_location_hours_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_location
    ADD CONSTRAINT wip_location_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_importantdate
    ADD CONSTRAINT wip_state_importantdate_id_importantdatetype_id_key UNIQUE (id, importantdatetype_id);
ALTER TABLE ONLY public.wip_state_importantdate
    ADD CONSTRAINT wip_state_importantdate_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_infotab
    ADD CONSTRAINT wip_state_infotab_id_caption_key UNIQUE (id, caption);
ALTER TABLE ONLY public.wip_state_infotab
    ADD CONSTRAINT wip_state_infotab_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_news
    ADD CONSTRAINT wip_state_news_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_notice
    ADD CONSTRAINT wip_state_notice_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_phone
    ADD CONSTRAINT wip_state_phone_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state
    ADD CONSTRAINT wip_state_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.wip_state_url
    ADD CONSTRAINT wip_state_url_id_urltype_id_key UNIQUE (id, urltype_id);
ALTER TABLE ONLY public.wip_state_url
    ADD CONSTRAINT wip_state_url_pkey PRIMARY KEY (id);
ALTER TABLE ONLY public.jurisdiction_importantdate
    ADD CONSTRAINT jurisdiction_importantdate_importantdatetype_id_fkey FOREIGN KEY (importantdatetype_id) REFERENCES public.importantdatetype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.jurisdiction_importantdate
    ADD CONSTRAINT jurisdiction_importantdate_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_infotab
    ADD CONSTRAINT jurisdiction_infotab_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_news
    ADD CONSTRAINT jurisdiction_news_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_notice
    ADD CONSTRAINT jurisdiction_notice_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_phone
    ADD CONSTRAINT jurisdiction_phone_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_phone
    ADD CONSTRAINT jurisdiction_phone_phonenumbertype_id_fkey FOREIGN KEY (phonenumbertype_id) REFERENCES public.phonenumbertype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.jurisdiction_publish_log
    ADD CONSTRAINT jurisdiction_publish_log_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_publish_log
    ADD CONSTRAINT jurisdiction_publish_log_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.jurisdiction
    ADD CONSTRAINT jurisdiction_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_url
    ADD CONSTRAINT jurisdiction_url_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.jurisdiction_url
    ADD CONSTRAINT jurisdiction_url_urltype_id_fkey FOREIGN KEY (urltype_id) REFERENCES public.urltype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_facilitytype_id_fkey FOREIGN KEY (facilitytype_id) REFERENCES public.facilitytype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.location_hours
    ADD CONSTRAINT location_hours_location_id_fkey FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_importantdate
    ADD CONSTRAINT state_importantdate_importantdatetype_id_fkey FOREIGN KEY (importantdatetype_id) REFERENCES public.importantdatetype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.state_importantdate
    ADD CONSTRAINT state_importantdate_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_infotab
    ADD CONSTRAINT state_infotab_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_news
    ADD CONSTRAINT state_news_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_notice
    ADD CONSTRAINT state_notice_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_phone
    ADD CONSTRAINT state_phone_phonenumbertype_id_fkey FOREIGN KEY (phonenumbertype_id) REFERENCES public.phonenumbertype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.state_phone
    ADD CONSTRAINT state_phone_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_publish_log
    ADD CONSTRAINT state_publish_log_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_publish_log
    ADD CONSTRAINT state_publish_log_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.state_url
    ADD CONSTRAINT state_url_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.state_url
    ADD CONSTRAINT state_url_urltype_id_fkey FOREIGN KEY (urltype_id) REFERENCES public.urltype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.user_jurisdiction
    ADD CONSTRAINT user_jurisdiction_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.user_jurisdiction
    ADD CONSTRAINT user_jurisdiction_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.user_state
    ADD CONSTRAINT user_state_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.user_state
    ADD CONSTRAINT user_state_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id) ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_jurisdiction_importantdate
    ADD CONSTRAINT wip_jurisdiction_importantdate_importantdatetype_id_fkey FOREIGN KEY (importantdatetype_id) REFERENCES public.importantdatetype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_jurisdiction_importantdate
    ADD CONSTRAINT wip_jurisdiction_importantdate_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction_infotab
    ADD CONSTRAINT wip_jurisdiction_infotab_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction
    ADD CONSTRAINT wip_jurisdiction_jurisdiction_id_fkey FOREIGN KEY (jurisdiction_id) REFERENCES public.jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction_news
    ADD CONSTRAINT wip_jurisdiction_news_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction_notice
    ADD CONSTRAINT wip_jurisdiction_notice_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction_phone
    ADD CONSTRAINT wip_jurisdiction_phone_phonenumbertype_id_fkey FOREIGN KEY (phonenumbertype_id) REFERENCES public.phonenumbertype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_jurisdiction_phone
    ADD CONSTRAINT wip_jurisdiction_phone_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_jurisdiction_url
    ADD CONSTRAINT wip_jurisdiction_url_urltype_id_fkey FOREIGN KEY (urltype_id) REFERENCES public.urltype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_jurisdiction_url
    ADD CONSTRAINT wip_jurisdiction_url_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_location
    ADD CONSTRAINT wip_location_facilitytype_id_fkey FOREIGN KEY (facilitytype_id) REFERENCES public.facilitytype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_location_hours
    ADD CONSTRAINT wip_location_hours_wip_location_id_fkey FOREIGN KEY (wip_location_id) REFERENCES public.wip_location(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_location
    ADD CONSTRAINT wip_location_wip_jurisdiction_id_fkey FOREIGN KEY (wip_jurisdiction_id) REFERENCES public.wip_jurisdiction(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_importantdate
    ADD CONSTRAINT wip_state_importantdate_importantdatetype_id_fkey FOREIGN KEY (importantdatetype_id) REFERENCES public.importantdatetype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_state_importantdate
    ADD CONSTRAINT wip_state_importantdate_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_infotab
    ADD CONSTRAINT wip_state_infotab_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_news
    ADD CONSTRAINT wip_state_news_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_notice
    ADD CONSTRAINT wip_state_notice_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_phone
    ADD CONSTRAINT wip_state_phone_phonenumbertype_id_fkey FOREIGN KEY (phonenumbertype_id) REFERENCES public.phonenumbertype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_state_phone
    ADD CONSTRAINT wip_state_phone_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state
    ADD CONSTRAINT wip_state_state_id_fkey FOREIGN KEY (state_id) REFERENCES public.state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
ALTER TABLE ONLY public.wip_state_url
    ADD CONSTRAINT wip_state_url_urltype_id_fkey FOREIGN KEY (urltype_id) REFERENCES public.urltype(id) ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE ONLY public.wip_state_url
    ADD CONSTRAINT wip_state_url_wip_state_id_fkey FOREIGN KEY (wip_state_id) REFERENCES public.wip_state(id) ON UPDATE CASCADE ON DELETE RESTRICT;
create or replace procedure generate_calendar(from_date date, days int)
language plpgsql
as $$
begin
   INSERT INTO calendar
	SELECT TO_CHAR(datum, 'yyyymmdd')::INT AS date_dim_id,
		   datum AS date_actual,
		   TO_CHAR(datum, 'fmDDth') AS day_suffix,
		   TO_CHAR(datum, 'Day') AS day_name,
		   EXTRACT(ISODOW FROM datum) AS day_of_week,
		   EXTRACT(DAY FROM datum) AS day_of_month,
		   datum - DATE_TRUNC('quarter', datum)::DATE + 1 AS day_of_quarter,
		   EXTRACT(DOY FROM datum) AS day_of_year,
		   TO_CHAR(datum, 'W')::INT AS week_of_month,
		   EXTRACT(WEEK FROM datum) AS week_of_year,
		   EXTRACT(ISOYEAR FROM datum) || TO_CHAR(datum, '"-W"IW-') || EXTRACT(ISODOW FROM datum) AS week_of_year_iso,
		   EXTRACT(MONTH FROM datum) AS month_actual,
		   TO_CHAR(datum, 'Month') AS month_name,
		   TO_CHAR(datum, 'Mon') AS month_name_abbreviated,
		   EXTRACT(QUARTER FROM datum) AS quarter_actual,
		   CASE
			   WHEN EXTRACT(QUARTER FROM datum) = 1 THEN 'First'
			   WHEN EXTRACT(QUARTER FROM datum) = 2 THEN 'Second'
			   WHEN EXTRACT(QUARTER FROM datum) = 3 THEN 'Third'
			   WHEN EXTRACT(QUARTER FROM datum) = 4 THEN 'Fourth'
			   END AS quarter_name,
		   EXTRACT(ISOYEAR FROM datum) AS year_actual,
		   datum + (1 - EXTRACT(ISODOW FROM datum))::INT AS first_day_of_week,
		   datum + (7 - EXTRACT(ISODOW FROM datum))::INT AS last_day_of_week,
		   datum + (1 - EXTRACT(DAY FROM datum))::INT AS first_day_of_month,
		   (DATE_TRUNC('MONTH', datum) + INTERVAL '1 MONTH - 1 day')::DATE AS last_day_of_month,
		   DATE_TRUNC('quarter', datum)::DATE AS first_day_of_quarter,
		   (DATE_TRUNC('quarter', datum) + INTERVAL '3 MONTH - 1 day')::DATE AS last_day_of_quarter,
		   TO_DATE(EXTRACT(YEAR FROM datum) || '-01-01', 'YYYY-MM-DD') AS first_day_of_year,
		   TO_DATE(EXTRACT(YEAR FROM datum) || '-12-31', 'YYYY-MM-DD') AS last_day_of_year,
		   TO_CHAR(datum, 'mmyyyy') AS mmyyyy,
		   TO_CHAR(datum, 'mmddyyyy') AS mmddyyyy,
		   CASE
			   WHEN EXTRACT(ISODOW FROM datum) IN (6, 7) THEN TRUE
			   ELSE FALSE
			   END AS weekend_indr
	FROM (SELECT from_date + SEQUENCE.DAY AS datum
		  FROM GENERATE_SERIES(0, days) AS SEQUENCE (DAY)
		  GROUP BY SEQUENCE.DAY) DQ
	ORDER BY 1;	
	COMMIT;
end;
$$;
